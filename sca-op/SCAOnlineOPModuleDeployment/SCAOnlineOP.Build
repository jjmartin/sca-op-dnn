<?xml version="1.0"?>
<!-- targets to be executed, when omitted from command line default is run -->
<project name="SCAOnlineOP" default="BuildAndZip">
	<target name="init">
		<property name="nant.settings.currentframework" value="net-4.0" />

		<!-- This is where your packaged zips will build to from within the module folder -->
		<property name="package.dir" value="package" overwrite="false" />

		<!-- This is where your resource.zip will be built so it can be zipped and distributed with the release install zips -->
		<property name="resourcezip.dir" value="ResourceZip" />
		<property name="module.dir" value="../website/desktopmodules/scaonlineop" />

		<property name="bin.dir" value="${module.dir}/bin" />
		<property name="controls.dir" value="controls" />
		<property name="localresource.dir" value="App_LocalResources" />
		<property name="globalresource.dir" value="App_GlobalResources" />

		<property name="binZip" value="_Install" />
		<property name="srcZip" value="_Source" />

		<property name="verbose" value="true" overwrite="false" />

		<!-- ModuleName value should be set specific to the project -->
		<property name="ModuleName" value="SCAOnlineOP"  overwrite="false"  />
		<property name="subproject.name" value="${ModuleName}"/>
		<property name="module.dll" value="${bin.dir}/${subproject.name}.dll" />

		<property name="debug" value="false" overwrite="false" />
		<property name="config" value="debug" if="${debug}" />
		<property name="config" value="release" unless="${debug}" />

		<sysinfo failonerror="false"  />

		<if test="${verbose}">
			<echo message="solutionName: ${subproject.name}" />
			<echo message="debug:        ${debug}" />
			<echo message="config:       ${config}" />
		</if>

	</target>

	<target name="Compile" depends="init">
		<exec program="${sys.env.windir}\Microsoft.NET\Framework\v4.0.30319\msbuild.exe" failonerror="true">
			<arg value="..\${subproject.name}.sln" />
			<arg value="/p:Configuration=Release" />
			<arg value="/p:Platform=&quot;Any CPU&quot;" />
		</exec>
	</target>

	<!-- It is important that this target does not run before the Compile target since it will lock the assembly -->
	<target name="VersionInfo" >
		<property name="version" value="${assemblyname::get-version(assemblyname::get-assembly-name(module.dll))}" />
		 <if test="${verbose}">
			<echo message="version: ${version}" />
		</if>
	</target>

	<target name="UpdateDNNVersionInfo" depends="VersionInfo">
		<xmlpoke file="${module.dir}/SCAOnlineOP.dnn5" xpath="//package/@version" value="${version}" />
	</target>

	<target name="CleanPackageBin" depends="init UpdateDNNVersionInfo">
		<delete file="${package.dir}/${ModuleName}_${version}${binZip}.zip" if="${file::exists('${package.dir}/${ModuleName}_${version}${binZip}.zip')}" />
	</target>

	<target name="CleanPackageSource" depends="init UpdateDNNVersionInfo">
		<delete file="${package.dir}/${ModuleName}_${version}${srcZip}.zip" if="${file::exists('${package.dir}/${ModuleName}_${version}${srcZip}.zip')}" />
	</target>

	<target name="CleanPackageAll" depends="init">
		<delete dir="${package.dir}" if="${directory::exists(package.dir)}" />
	</target>

	<!-- check for resourcezip folder, delete it and its contents if it exists -->
	<target name="CleanResourceZip" depends="init">
		<delete dir="${resourcezip.dir}" if="${directory::exists(resourcezip.dir)}" />
	</target>

	<!-- Begin area for creating resourcezip for installable PA zips (should depend on target that clears where this will build zip file to)-->
	<target name="CreateResourceZip" depends="CleanResourceZip">
		<!-- create a flat directory to zip for install -->
		<mkdir dir="temp" unless="${directory::exists('temp')}" />
		<!-- DO NOT flatten this as we want to retain folder structure in this and ONLY this zip -->
		<copy todir="temp" flatten="false">
			<fileset basedir="${module.dir}">
				<!-- Tell nant what files to grab -->
				<!-- everything included here ends up in resource.zip, this should be excluded in the CreateBinZip -->
				<include name="**/images/*" />
				<include name="**/${localresource.dir}/*.resx" />
				<include name="**/${globalresource.dir}/*.resx" />
				<include name="**/${globalresource.dir}/*.xml" />
				<include name="**/*.ascx" />
				<include name="**/*.css" />
				<include name="**/*.aspx" />
				<include name="**/*.gif" />
        <include name="**/*.config" />
        <include name="**/*.txt" />
        <include name="**/*.htm?" />
				<exclude name="**/Resources.zip" />
				<exclude name="**/Install/**/*" />
				<exclude name="**/_sgbak/*" />
				<exclude name="**/thumbs.db" />
				<exclude name="**/*.zip" />
				<exclude name="**/docs/images/*" />
			</fileset>
		</copy>

		<mkdir dir="${resourcezip.dir}" unless="${directory::exists(resourcezip.dir)}" />
		<zip zipfile="${resourcezip.dir}/Resources.zip">
			<fileset basedir="temp">
				<include name="**/*" />
				<exclude name="**/*.dll" />

			</fileset>
		</zip>

		<!--Delete temp directory -->
		<delete dir="temp" failonerror="false" />

	</target>
	<!-- End area for resourcezip creation -->

	<!-- Begin area for creating resourcezip for installable PA zips (should depend on target that clears where this will build zip file to)-->
	<target name="CreateResourceSourceZip" depends="CleanResourceZip">
		<!-- create a flat directory to zip for install -->
		<mkdir dir="temp" unless="${directory::exists('temp')}" />
		<!-- DO NOT flatten this as we want to retain folder structure in this and ONLY this zip -->
		<copy todir="temp" flatten="false">
			<fileset basedir="${module.dir}">
				<!-- Tell nant what files to grab -->
				<!-- everything included here ends up in resource.zip, this should be excluded in the CreateBinZip -->
				<include name="**/images/*" />
				<include name="**/Themes/**/*" />
				<include name="**/Resources/**/*" />
				<include name="**/Documentation/**" />
				<include name="**/${localresource.dir}/*.resx" />
				<include name="**/${globalresource.dir}/*.resx" />
				<include name="**/${globalresource.dir}/*.xml" />
				<include name="**/*.ascx" />
				<include name="**/*.aspx" />
				<include name="**/*.cs" />
				<include name="**/*.sln" />
        <include name="**/*.config" />
        <include name="**/*.config" />
        <include name="**/*.txt" />
        <include name="**/*.htm?" />
				<include name="**/*.build" />
				<exclude name="**/Install/**/*" />        
				<exclude name="**/thumbs.db" />
				<exclude name="**/*.zip" />
			</fileset>
		</copy>

		<mkdir dir="${resourcezip.dir}" unless="${directory::exists(resourcezip.dir)}" />
		<zip zipfile="${resourcezip.dir}/Resources.zip">
			<fileset basedir="temp">
				<include name="**/*" />
				<exclude name="**/*.dll" />

			</fileset>
		</zip>

		<!--Delete temp directory -->
		<delete dir="temp" failonerror="false" />

	</target>
	<!-- End area for resourceSourcezip creation -->





	<!-- Begin area for creating installable PA (should depend on target that clears where this will build zip file to AND resourcezip as this is part of installable PA)-->
	<target name="CreateBinZip" depends="CleanPackageBin CreateResourceZip">
		<!-- DO flatten this as we want to retain folder structure in this and ONLY this zip -->
		<copy todir="temp" flatten="false">
			<fileset basedir="${module.dir}">
        <include name="**/*.config" />
				<include name="**/*.txt" />
        <include name="**/*.htm?" />
				<include name="bin/${ModuleName}*.dll" />
        <include name="bin/SCAData.dll" />
				<include name="bin/itextsharp.dll" />
        <include name="bin/AjaxControlToolkit.dll" />
				<include name="**/*.sqldataprovider" />
				<include name="**/*.dnn5" />
				<exclude name="obj/**/*.*" />
			</fileset>
		</copy>
		<copy todir="temp" flatten="true">
			<fileset>
				<include name="**${resourcezip.dir}/Resources.zip" />
			</fileset>
		</copy>

		<mkdir dir="${package.dir}" unless="${directory::exists(package.dir)}" />
		<zip zipfile="${package.dir}/${ModuleName}_${version}${binZip}.zip">
			<fileset basedir="temp">
				<include name="**/*" />
			</fileset>
		</zip>

		<!--Delete temp directory -->
		<delete dir="temp" failonerror="false" />

	</target>
	<!-- End area for installable PA -->

	<!-- Begin area for distributable source code zip (should depend on target that clears where this will build zip file to)-->
	<target name="CreateSrcZip" depends="CleanPackageSource CreateResourceSourceZip">
		<!-- DO flatten this as we want to retain folder structure in this and ONLY this zip -->
		<copy todir="temp" flatten="true">
			<fileset basedir="${module.dir}">
				<include name="**${resourcezip.dir}/Resources.zip" />

				<include name="../../bin/${ModuleName}*.dll" />
        <include name="../../bin/SCAData.dll" />
				<include name="**/*.sqldataprovider" />
				<include name="**/*.dnn5" />
			</fileset>
		</copy>
		<copy todir="temp" flatten="true">
			<fileset>
				<include name="**${resourcezip.dir}/Resources.zip" />
			</fileset>
		</copy>
		<mkdir dir="${package.dir}" unless="${directory::exists(package.dir)}" />
		<zip zipfile="${package.dir}/${ModuleName}_${version}${srcZip}.zip">
			<fileset basedir="temp">
				<include name="**/*" />
			</fileset>
		</zip>

		<!--Delete temp directory -->
		<delete dir="temp" failonerror="false" />

	</target>
	<!-- End area for distributable source code zip -->

	<!--  SYNTHETIC TASKS  -->
	<target name="build" depends="Compile" description="This target compiles the application.	" />

	<target name="BuildAndZip" depends="build CreateBinZip" description="This target compiles the application and then creates two-three zip files: 
								- one that only contains the compiled code and runtime files 
					- one is the resourceszip for installable pa's
								- the other with compiled code and source code.	" />

</project>