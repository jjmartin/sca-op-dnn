//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAAlias_SCAPeople", "SCAPeople", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JeffMartin.ScaData.Person), "SCAAlias", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.Alias), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCAAlias", "SCAAlias", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JeffMartin.ScaData.Alias), "SCAPeopleAward", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.PersonAward), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAAwards_SCAAwardedBy", "SCAAwardedBy", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JeffMartin.ScaData.AwardedByWho), "SCAAwards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.Award), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAAwardGroups_SCAGroups", "SCAGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JeffMartin.ScaData.Group), "SCAAwardGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.AwardGroup), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAAwards_SCAAwardGroups", "SCAAwardGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JeffMartin.ScaData.AwardGroup), "SCAAwards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.Award), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAAwards_SCAGroups", "SCAGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JeffMartin.ScaData.Group), "SCAAwards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.Award), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCAAwards", "SCAAwards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JeffMartin.ScaData.Award), "SCAPeopleAward", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.PersonAward), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAGroups_SCABranchStatusId", "SCABranchStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JeffMartin.ScaData.BranchStatus), "SCAGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.Group), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCACrowns_SCAGroups", "SCAGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JeffMartin.ScaData.Group), "SCACrowns", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.Crown), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCACrowns", "SCACrowns", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JeffMartin.ScaData.Crown), "SCAPeopleAward", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.PersonAward), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAPeopleOfficer_SCACrowns", "SCACrowns", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JeffMartin.ScaData.Crown), "SCAPeopleOfficer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.PersonOfficer), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAGroups_SCAGroupDesignation", "SCAGroupDesignation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JeffMartin.ScaData.GroupDesignation), "SCAGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.Group), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAGroups_SCAGroups", "SCAGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JeffMartin.ScaData.Group), "SCAGroups1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.Group), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAOfficerPosition_SCAGroups", "SCAGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JeffMartin.ScaData.Group), "SCAOfficerPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.OfficerPosition), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAPeople_SCAGroups", "SCAGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JeffMartin.ScaData.Group), "SCAPeople", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.Person), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAOfficerPosition_SCAOfficerPositionType", "SCAOfficerPositionType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JeffMartin.ScaData.OfficerPositionType), "SCAOfficerPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.OfficerPosition), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAPeopleOfficer_SCAOfficerPosition", "SCAOfficerPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JeffMartin.ScaData.OfficerPosition), "SCAPeopleOfficer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.PersonOfficer), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCAPeople", "SCAPeople", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JeffMartin.ScaData.Person), "SCAPeopleAward", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.PersonAward), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FK_SCAPeopleOfficer_SCAPeople", "SCAPeople", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JeffMartin.ScaData.Person), "SCAPeopleOfficer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.PersonOfficer), true)]
[assembly: EdmRelationshipAttribute("JeffMartin.ScaData", "FileOfficerPosition", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JeffMartin.ScaData.File), "OfficerPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JeffMartin.ScaData.OfficerPosition), true)]

#endregion

namespace JeffMartin.ScaData
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ScaOpEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ScaOpEntities object using the connection string found in the 'ScaOpEntities' section of the application configuration file.
        /// </summary>
        public ScaOpEntities() : base("name=ScaOpEntities", "ScaOpEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScaOpEntities object.
        /// </summary>
        public ScaOpEntities(string connectionString) : base(connectionString, "ScaOpEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScaOpEntities object.
        /// </summary>
        public ScaOpEntities(EntityConnection connection) : base(connection, "ScaOpEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Alias> Aliases
        {
            get
            {
                if ((_Aliases == null))
                {
                    _Aliases = base.CreateObjectSet<Alias>("Aliases");
                }
                return _Aliases;
            }
        }
        private ObjectSet<Alias> _Aliases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AwardedByWho> WhoGivesAward
        {
            get
            {
                if ((_WhoGivesAward == null))
                {
                    _WhoGivesAward = base.CreateObjectSet<AwardedByWho>("WhoGivesAward");
                }
                return _WhoGivesAward;
            }
        }
        private ObjectSet<AwardedByWho> _WhoGivesAward;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AwardGroup> AwardGroups
        {
            get
            {
                if ((_AwardGroups == null))
                {
                    _AwardGroups = base.CreateObjectSet<AwardGroup>("AwardGroups");
                }
                return _AwardGroups;
            }
        }
        private ObjectSet<AwardGroup> _AwardGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Award> Awards
        {
            get
            {
                if ((_Awards == null))
                {
                    _Awards = base.CreateObjectSet<Award>("Awards");
                }
                return _Awards;
            }
        }
        private ObjectSet<Award> _Awards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BranchStatus> BranchStatuses
        {
            get
            {
                if ((_BranchStatuses == null))
                {
                    _BranchStatuses = base.CreateObjectSet<BranchStatus>("BranchStatuses");
                }
                return _BranchStatuses;
            }
        }
        private ObjectSet<BranchStatus> _BranchStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Crown> Crowns
        {
            get
            {
                if ((_Crowns == null))
                {
                    _Crowns = base.CreateObjectSet<Crown>("Crowns");
                }
                return _Crowns;
            }
        }
        private ObjectSet<Crown> _Crowns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupDesignation> GroupDesignations
        {
            get
            {
                if ((_GroupDesignations == null))
                {
                    _GroupDesignations = base.CreateObjectSet<GroupDesignation>("GroupDesignations");
                }
                return _GroupDesignations;
            }
        }
        private ObjectSet<GroupDesignation> _GroupDesignations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OfficerPosition> OfficerPositions
        {
            get
            {
                if ((_OfficerPositions == null))
                {
                    _OfficerPositions = base.CreateObjectSet<OfficerPosition>("OfficerPositions");
                }
                return _OfficerPositions;
            }
        }
        private ObjectSet<OfficerPosition> _OfficerPositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OfficerPositionType> OfficerPositionTypes
        {
            get
            {
                if ((_OfficerPositionTypes == null))
                {
                    _OfficerPositionTypes = base.CreateObjectSet<OfficerPositionType>("OfficerPositionTypes");
                }
                return _OfficerPositionTypes;
            }
        }
        private ObjectSet<OfficerPositionType> _OfficerPositionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonAward> PersonAwards
        {
            get
            {
                if ((_PersonAwards == null))
                {
                    _PersonAwards = base.CreateObjectSet<PersonAward>("PersonAwards");
                }
                return _PersonAwards;
            }
        }
        private ObjectSet<PersonAward> _PersonAwards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonOfficer> PersonOfficers
        {
            get
            {
                if ((_PersonOfficers == null))
                {
                    _PersonOfficers = base.CreateObjectSet<PersonOfficer>("PersonOfficers");
                }
                return _PersonOfficers;
            }
        }
        private ObjectSet<PersonOfficer> _PersonOfficers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Aliases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAliases(Alias alias)
        {
            base.AddObject("Aliases", alias);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WhoGivesAward EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWhoGivesAward(AwardedByWho awardedByWho)
        {
            base.AddObject("WhoGivesAward", awardedByWho);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AwardGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAwardGroups(AwardGroup awardGroup)
        {
            base.AddObject("AwardGroups", awardGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Awards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAwards(Award award)
        {
            base.AddObject("Awards", award);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BranchStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBranchStatuses(BranchStatus branchStatus)
        {
            base.AddObject("BranchStatuses", branchStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Crowns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCrowns(Crown crown)
        {
            base.AddObject("Crowns", crown);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupDesignations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupDesignations(GroupDesignation groupDesignation)
        {
            base.AddObject("GroupDesignations", groupDesignation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OfficerPositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOfficerPositions(OfficerPosition officerPosition)
        {
            base.AddObject("OfficerPositions", officerPosition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OfficerPositionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOfficerPositionTypes(OfficerPositionType officerPositionType)
        {
            base.AddObject("OfficerPositionTypes", officerPositionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonAwards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonAwards(PersonAward personAward)
        {
            base.AddObject("PersonAwards", personAward);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonOfficers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonOfficers(PersonOfficer personOfficer)
        {
            base.AddObject("PersonOfficers", personOfficer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="Alias")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alias : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Alias object.
        /// </summary>
        /// <param name="aliasId">Initial value of the AliasId property.</param>
        /// <param name="peopleId">Initial value of the PeopleId property.</param>
        /// <param name="sCAName">Initial value of the SCAName property.</param>
        /// <param name="registered">Initial value of the Registered property.</param>
        /// <param name="preferred">Initial value of the Preferred property.</param>
        public static Alias CreateAlias(global::System.Int32 aliasId, global::System.Int32 peopleId, global::System.String sCAName, global::System.Boolean registered, global::System.Boolean preferred)
        {
            Alias alias = new Alias();
            alias.AliasId = aliasId;
            alias.PeopleId = peopleId;
            alias.SCAName = sCAName;
            alias.Registered = registered;
            alias.Preferred = preferred;
            return alias;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AliasId
        {
            get
            {
                return _AliasId;
            }
            set
            {
                if (_AliasId != value)
                {
                    OnAliasIdChanging(value);
                    ReportPropertyChanging("AliasId");
                    _AliasId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AliasId");
                    OnAliasIdChanged();
                }
            }
        }
        private global::System.Int32 _AliasId;
        partial void OnAliasIdChanging(global::System.Int32 value);
        partial void OnAliasIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeopleId
        {
            get
            {
                return _PeopleId;
            }
            set
            {
                OnPeopleIdChanging(value);
                ReportPropertyChanging("PeopleId");
                _PeopleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeopleId");
                OnPeopleIdChanged();
            }
        }
        private global::System.Int32 _PeopleId;
        partial void OnPeopleIdChanging(global::System.Int32 value);
        partial void OnPeopleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SCAName
        {
            get
            {
                return _SCAName;
            }
            set
            {
                OnSCANameChanging(value);
                ReportPropertyChanging("SCAName");
                _SCAName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SCAName");
                OnSCANameChanged();
            }
        }
        private global::System.String _SCAName;
        partial void OnSCANameChanging(global::System.String value);
        partial void OnSCANameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Registered
        {
            get
            {
                return _Registered;
            }
            set
            {
                OnRegisteredChanging(value);
                ReportPropertyChanging("Registered");
                _Registered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Registered");
                OnRegisteredChanged();
            }
        }
        private global::System.Boolean _Registered;
        partial void OnRegisteredChanging(global::System.Boolean value);
        partial void OnRegisteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Preferred
        {
            get
            {
                return _Preferred;
            }
            set
            {
                OnPreferredChanging(value);
                ReportPropertyChanging("Preferred");
                _Preferred = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Preferred");
                OnPreferredChanged();
            }
        }
        private global::System.Boolean _Preferred;
        partial void OnPreferredChanging(global::System.Boolean value);
        partial void OnPreferredChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAAlias_SCAPeople", "SCAPeople")]
        public Person SCAPeople
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("JeffMartin.ScaData.FK_SCAAlias_SCAPeople", "SCAPeople").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("JeffMartin.ScaData.FK_SCAAlias_SCAPeople", "SCAPeople").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> SCAPeopleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("JeffMartin.ScaData.FK_SCAAlias_SCAPeople", "SCAPeople");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("JeffMartin.ScaData.FK_SCAAlias_SCAPeople", "SCAPeople", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCAAlias", "SCAPeopleAward")]
        public EntityCollection<PersonAward> SCAPeopleAwards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonAward>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAlias", "SCAPeopleAward");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonAward>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAlias", "SCAPeopleAward", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="Award")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Award : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Award object.
        /// </summary>
        /// <param name="awardId">Initial value of the AwardId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="closed">Initial value of the Closed property.</param>
        /// <param name="honorary">Initial value of the Honorary property.</param>
        public static Award CreateAward(global::System.Int32 awardId, global::System.Int32 groupId, global::System.String name, global::System.Boolean closed, global::System.Boolean honorary)
        {
            Award award = new Award();
            award.AwardId = awardId;
            award.GroupId = groupId;
            award.Name = name;
            award.Closed = closed;
            award.Honorary = honorary;
            return award;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AwardId
        {
            get
            {
                return _AwardId;
            }
            set
            {
                if (_AwardId != value)
                {
                    OnAwardIdChanging(value);
                    ReportPropertyChanging("AwardId");
                    _AwardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AwardId");
                    OnAwardIdChanged();
                }
            }
        }
        private global::System.Int32 _AwardId;
        partial void OnAwardIdChanging(global::System.Int32 value);
        partial void OnAwardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Charter
        {
            get
            {
                return _Charter;
            }
            set
            {
                OnCharterChanging(value);
                ReportPropertyChanging("Charter");
                _Charter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Charter");
                OnCharterChanged();
            }
        }
        private global::System.String _Charter;
        partial void OnCharterChanging(global::System.String value);
        partial void OnCharterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Precedence
        {
            get
            {
                return _Precedence;
            }
            set
            {
                OnPrecedenceChanging(value);
                ReportPropertyChanging("Precedence");
                _Precedence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Precedence");
                OnPrecedenceChanged();
            }
        }
        private Nullable<global::System.Int32> _Precedence;
        partial void OnPrecedenceChanging(Nullable<global::System.Int32> value);
        partial void OnPrecedenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BadgeUrl
        {
            get
            {
                return _BadgeUrl;
            }
            set
            {
                OnBadgeUrlChanging(value);
                ReportPropertyChanging("BadgeUrl");
                _BadgeUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BadgeUrl");
                OnBadgeUrlChanged();
            }
        }
        private global::System.String _BadgeUrl;
        partial void OnBadgeUrlChanging(global::System.String value);
        partial void OnBadgeUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BadgeBlazon
        {
            get
            {
                return _BadgeBlazon;
            }
            set
            {
                OnBadgeBlazonChanging(value);
                ReportPropertyChanging("BadgeBlazon");
                _BadgeBlazon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BadgeBlazon");
                OnBadgeBlazonChanged();
            }
        }
        private global::System.String _BadgeBlazon;
        partial void OnBadgeBlazonChanging(global::System.String value);
        partial void OnBadgeBlazonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Closed
        {
            get
            {
                return _Closed;
            }
            set
            {
                OnClosedChanging(value);
                ReportPropertyChanging("Closed");
                _Closed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Closed");
                OnClosedChanged();
            }
        }
        private global::System.Boolean _Closed;
        partial void OnClosedChanging(global::System.Boolean value);
        partial void OnClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AwardedById
        {
            get
            {
                return _AwardedById;
            }
            set
            {
                OnAwardedByIdChanging(value);
                ReportPropertyChanging("AwardedById");
                _AwardedById = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwardedById");
                OnAwardedByIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AwardedById;
        partial void OnAwardedByIdChanging(Nullable<global::System.Int32> value);
        partial void OnAwardedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AwardGroupId
        {
            get
            {
                return _AwardGroupId;
            }
            set
            {
                OnAwardGroupIdChanging(value);
                ReportPropertyChanging("AwardGroupId");
                _AwardGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwardGroupId");
                OnAwardGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AwardGroupId;
        partial void OnAwardGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnAwardGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Honorary
        {
            get
            {
                return _Honorary;
            }
            set
            {
                OnHonoraryChanging(value);
                ReportPropertyChanging("Honorary");
                _Honorary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Honorary");
                OnHonoraryChanged();
            }
        }
        private global::System.Boolean _Honorary;
        partial void OnHonoraryChanging(global::System.Boolean value);
        partial void OnHonoraryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAAwards_SCAAwardedBy", "SCAAwardedBy")]
        public AwardedByWho SCAAwardedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AwardedByWho>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardedBy", "SCAAwardedBy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AwardedByWho>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardedBy", "SCAAwardedBy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AwardedByWho> SCAAwardedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AwardedByWho>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardedBy", "SCAAwardedBy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AwardedByWho>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardedBy", "SCAAwardedBy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAAwards_SCAAwardGroups", "SCAAwardGroups")]
        public AwardGroup SCAAwardGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AwardGroup>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardGroups", "SCAAwardGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AwardGroup>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardGroups", "SCAAwardGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AwardGroup> SCAAwardGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AwardGroup>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardGroups", "SCAAwardGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AwardGroup>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardGroups", "SCAAwardGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAAwards_SCAGroups", "SCAGroups")]
        public Group SCAGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAAwards_SCAGroups", "SCAGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAAwards_SCAGroups", "SCAGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> SCAGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAAwards_SCAGroups", "SCAGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("JeffMartin.ScaData.FK_SCAAwards_SCAGroups", "SCAGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCAAwards", "SCAPeopleAward")]
        public EntityCollection<PersonAward> SCAPeopleAwards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonAward>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAwards", "SCAPeopleAward");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonAward>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAwards", "SCAPeopleAward", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="AwardedByWho")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AwardedByWho : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AwardedByWho object.
        /// </summary>
        /// <param name="awardedById">Initial value of the AwardedById property.</param>
        /// <param name="awardedBy">Initial value of the AwardedBy property.</param>
        public static AwardedByWho CreateAwardedByWho(global::System.Int32 awardedById, global::System.String awardedBy)
        {
            AwardedByWho awardedByWho = new AwardedByWho();
            awardedByWho.AwardedById = awardedById;
            awardedByWho.AwardedBy = awardedBy;
            return awardedByWho;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AwardedById
        {
            get
            {
                return _AwardedById;
            }
            set
            {
                if (_AwardedById != value)
                {
                    OnAwardedByIdChanging(value);
                    ReportPropertyChanging("AwardedById");
                    _AwardedById = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AwardedById");
                    OnAwardedByIdChanged();
                }
            }
        }
        private global::System.Int32 _AwardedById;
        partial void OnAwardedByIdChanging(global::System.Int32 value);
        partial void OnAwardedByIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AwardedBy
        {
            get
            {
                return _AwardedBy;
            }
            set
            {
                OnAwardedByChanging(value);
                ReportPropertyChanging("AwardedBy");
                _AwardedBy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AwardedBy");
                OnAwardedByChanged();
            }
        }
        private global::System.String _AwardedBy;
        partial void OnAwardedByChanging(global::System.String value);
        partial void OnAwardedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAAwards_SCAAwardedBy", "SCAAwards")]
        public EntityCollection<Award> SCAAwards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Award>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardedBy", "SCAAwards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Award>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardedBy", "SCAAwards", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="AwardGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AwardGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AwardGroup object.
        /// </summary>
        /// <param name="awardGroupId">Initial value of the AwardGroupId property.</param>
        /// <param name="awardGroupName">Initial value of the AwardGroupName property.</param>
        /// <param name="precedence">Initial value of the Precedence property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        public static AwardGroup CreateAwardGroup(global::System.Int32 awardGroupId, global::System.String awardGroupName, global::System.Int32 precedence, global::System.Int32 groupId)
        {
            AwardGroup awardGroup = new AwardGroup();
            awardGroup.AwardGroupId = awardGroupId;
            awardGroup.AwardGroupName = awardGroupName;
            awardGroup.Precedence = precedence;
            awardGroup.GroupId = groupId;
            return awardGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AwardGroupId
        {
            get
            {
                return _AwardGroupId;
            }
            set
            {
                if (_AwardGroupId != value)
                {
                    OnAwardGroupIdChanging(value);
                    ReportPropertyChanging("AwardGroupId");
                    _AwardGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AwardGroupId");
                    OnAwardGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _AwardGroupId;
        partial void OnAwardGroupIdChanging(global::System.Int32 value);
        partial void OnAwardGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AwardGroupName
        {
            get
            {
                return _AwardGroupName;
            }
            set
            {
                OnAwardGroupNameChanging(value);
                ReportPropertyChanging("AwardGroupName");
                _AwardGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AwardGroupName");
                OnAwardGroupNameChanged();
            }
        }
        private global::System.String _AwardGroupName;
        partial void OnAwardGroupNameChanging(global::System.String value);
        partial void OnAwardGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Precedence
        {
            get
            {
                return _Precedence;
            }
            set
            {
                OnPrecedenceChanging(value);
                ReportPropertyChanging("Precedence");
                _Precedence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Precedence");
                OnPrecedenceChanged();
            }
        }
        private global::System.Int32 _Precedence;
        partial void OnPrecedenceChanging(global::System.Int32 value);
        partial void OnPrecedenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAAwardGroups_SCAGroups", "SCAGroups")]
        public Group SCAGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAAwardGroups_SCAGroups", "SCAGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAAwardGroups_SCAGroups", "SCAGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> SCAGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAAwardGroups_SCAGroups", "SCAGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("JeffMartin.ScaData.FK_SCAAwardGroups_SCAGroups", "SCAGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAAwards_SCAAwardGroups", "SCAAwards")]
        public EntityCollection<Award> SCAAwards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Award>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardGroups", "SCAAwards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Award>("JeffMartin.ScaData.FK_SCAAwards_SCAAwardGroups", "SCAAwards", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="BranchStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BranchStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BranchStatus object.
        /// </summary>
        /// <param name="branchStatusId">Initial value of the BranchStatusId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BranchStatus CreateBranchStatus(global::System.Int32 branchStatusId, global::System.String name)
        {
            BranchStatus branchStatus = new BranchStatus();
            branchStatus.BranchStatusId = branchStatusId;
            branchStatus.Name = name;
            return branchStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BranchStatusId
        {
            get
            {
                return _BranchStatusId;
            }
            set
            {
                if (_BranchStatusId != value)
                {
                    OnBranchStatusIdChanging(value);
                    ReportPropertyChanging("BranchStatusId");
                    _BranchStatusId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BranchStatusId");
                    OnBranchStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _BranchStatusId;
        partial void OnBranchStatusIdChanging(global::System.Int32 value);
        partial void OnBranchStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAGroups_SCABranchStatusId", "SCAGroups")]
        public EntityCollection<Group> SCAGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("JeffMartin.ScaData.FK_SCAGroups_SCABranchStatusId", "SCAGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("JeffMartin.ScaData.FK_SCAGroups_SCABranchStatusId", "SCAGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="Crown")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Crown : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Crown object.
        /// </summary>
        /// <param name="crownId">Initial value of the CrownId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="reign">Initial value of the Reign property.</param>
        /// <param name="sovereignId">Initial value of the SovereignId property.</param>
        /// <param name="heir">Initial value of the Heir property.</param>
        /// <param name="regent">Initial value of the Regent property.</param>
        public static Crown CreateCrown(global::System.Int32 crownId, global::System.Int32 groupId, global::System.Int32 reign, global::System.Int32 sovereignId, global::System.Boolean heir, global::System.Boolean regent)
        {
            Crown crown = new Crown();
            crown.CrownId = crownId;
            crown.GroupId = groupId;
            crown.Reign = reign;
            crown.SovereignId = sovereignId;
            crown.Heir = heir;
            crown.Regent = regent;
            return crown;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CrownId
        {
            get
            {
                return _CrownId;
            }
            set
            {
                if (_CrownId != value)
                {
                    OnCrownIdChanging(value);
                    ReportPropertyChanging("CrownId");
                    _CrownId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CrownId");
                    OnCrownIdChanged();
                }
            }
        }
        private global::System.Int32 _CrownId;
        partial void OnCrownIdChanging(global::System.Int32 value);
        partial void OnCrownIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reign
        {
            get
            {
                return _Reign;
            }
            set
            {
                OnReignChanging(value);
                ReportPropertyChanging("Reign");
                _Reign = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reign");
                OnReignChanged();
            }
        }
        private global::System.Int32 _Reign;
        partial void OnReignChanging(global::System.Int32 value);
        partial void OnReignChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SovereignId
        {
            get
            {
                return _SovereignId;
            }
            set
            {
                OnSovereignIdChanging(value);
                ReportPropertyChanging("SovereignId");
                _SovereignId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SovereignId");
                OnSovereignIdChanged();
            }
        }
        private global::System.Int32 _SovereignId;
        partial void OnSovereignIdChanging(global::System.Int32 value);
        partial void OnSovereignIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ConsortId
        {
            get
            {
                return _ConsortId;
            }
            set
            {
                OnConsortIdChanging(value);
                ReportPropertyChanging("ConsortId");
                _ConsortId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsortId");
                OnConsortIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ConsortId;
        partial void OnConsortIdChanging(Nullable<global::System.Int32> value);
        partial void OnConsortIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoronationLocation
        {
            get
            {
                return _CoronationLocation;
            }
            set
            {
                OnCoronationLocationChanging(value);
                ReportPropertyChanging("CoronationLocation");
                _CoronationLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoronationLocation");
                OnCoronationLocationChanged();
            }
        }
        private global::System.String _CoronationLocation;
        partial void OnCoronationLocationChanging(global::System.String value);
        partial void OnCoronationLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CrownTournamentDate
        {
            get
            {
                return _CrownTournamentDate;
            }
            set
            {
                OnCrownTournamentDateChanging(value);
                ReportPropertyChanging("CrownTournamentDate");
                _CrownTournamentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CrownTournamentDate");
                OnCrownTournamentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CrownTournamentDate;
        partial void OnCrownTournamentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCrownTournamentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CrownTournamentLocation
        {
            get
            {
                return _CrownTournamentLocation;
            }
            set
            {
                OnCrownTournamentLocationChanging(value);
                ReportPropertyChanging("CrownTournamentLocation");
                _CrownTournamentLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CrownTournamentLocation");
                OnCrownTournamentLocationChanged();
            }
        }
        private global::System.String _CrownTournamentLocation;
        partial void OnCrownTournamentLocationChanging(global::System.String value);
        partial void OnCrownTournamentLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SteppingDownLocation
        {
            get
            {
                return _SteppingDownLocation;
            }
            set
            {
                OnSteppingDownLocationChanging(value);
                ReportPropertyChanging("SteppingDownLocation");
                _SteppingDownLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SteppingDownLocation");
                OnSteppingDownLocationChanged();
            }
        }
        private global::System.String _SteppingDownLocation;
        partial void OnSteppingDownLocationChanging(global::System.String value);
        partial void OnSteppingDownLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalUrl
        {
            get
            {
                return _InternalUrl;
            }
            set
            {
                OnInternalUrlChanging(value);
                ReportPropertyChanging("InternalUrl");
                _InternalUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalUrl");
                OnInternalUrlChanged();
            }
        }
        private global::System.String _InternalUrl;
        partial void OnInternalUrlChanging(global::System.String value);
        partial void OnInternalUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Heir
        {
            get
            {
                return _Heir;
            }
            set
            {
                OnHeirChanging(value);
                ReportPropertyChanging("Heir");
                _Heir = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Heir");
                OnHeirChanged();
            }
        }
        private global::System.Boolean _Heir;
        partial void OnHeirChanging(global::System.Boolean value);
        partial void OnHeirChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Picture1Url
        {
            get
            {
                return _Picture1Url;
            }
            set
            {
                OnPicture1UrlChanging(value);
                ReportPropertyChanging("Picture1Url");
                _Picture1Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture1Url");
                OnPicture1UrlChanged();
            }
        }
        private global::System.String _Picture1Url;
        partial void OnPicture1UrlChanging(global::System.String value);
        partial void OnPicture1UrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Picture2Url
        {
            get
            {
                return _Picture2Url;
            }
            set
            {
                OnPicture2UrlChanging(value);
                ReportPropertyChanging("Picture2Url");
                _Picture2Url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture2Url");
                OnPicture2UrlChanged();
            }
        }
        private global::System.String _Picture2Url;
        partial void OnPicture2UrlChanging(global::System.String value);
        partial void OnPicture2UrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Picture1Caption
        {
            get
            {
                return _Picture1Caption;
            }
            set
            {
                OnPicture1CaptionChanging(value);
                ReportPropertyChanging("Picture1Caption");
                _Picture1Caption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture1Caption");
                OnPicture1CaptionChanged();
            }
        }
        private global::System.String _Picture1Caption;
        partial void OnPicture1CaptionChanging(global::System.String value);
        partial void OnPicture1CaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Picture2Caption
        {
            get
            {
                return _Picture2Caption;
            }
            set
            {
                OnPicture2CaptionChanging(value);
                ReportPropertyChanging("Picture2Caption");
                _Picture2Caption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture2Caption");
                OnPicture2CaptionChanged();
            }
        }
        private global::System.String _Picture2Caption;
        partial void OnPicture2CaptionChanging(global::System.String value);
        partial void OnPicture2CaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Picture1Credit
        {
            get
            {
                return _Picture1Credit;
            }
            set
            {
                OnPicture1CreditChanging(value);
                ReportPropertyChanging("Picture1Credit");
                _Picture1Credit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture1Credit");
                OnPicture1CreditChanged();
            }
        }
        private global::System.String _Picture1Credit;
        partial void OnPicture1CreditChanging(global::System.String value);
        partial void OnPicture1CreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Picture2Credit
        {
            get
            {
                return _Picture2Credit;
            }
            set
            {
                OnPicture2CreditChanging(value);
                ReportPropertyChanging("Picture2Credit");
                _Picture2Credit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Picture2Credit");
                OnPicture2CreditChanged();
            }
        }
        private global::System.String _Picture2Credit;
        partial void OnPicture2CreditChanging(global::System.String value);
        partial void OnPicture2CreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Regent
        {
            get
            {
                return _Regent;
            }
            set
            {
                OnRegentChanging(value);
                ReportPropertyChanging("Regent");
                _Regent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Regent");
                OnRegentChanged();
            }
        }
        private global::System.Boolean _Regent;
        partial void OnRegentChanging(global::System.Boolean value);
        partial void OnRegentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCACrowns_SCAGroups", "SCAGroups")]
        public Group SCAGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCACrowns_SCAGroups", "SCAGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCACrowns_SCAGroups", "SCAGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> SCAGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCACrowns_SCAGroups", "SCAGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("JeffMartin.ScaData.FK_SCACrowns_SCAGroups", "SCAGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCACrowns", "SCAPeopleAward")]
        public EntityCollection<PersonAward> SCAPeopleAwards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonAward>("JeffMartin.ScaData.FK_SCAPeopleAward_SCACrowns", "SCAPeopleAward");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonAward>("JeffMartin.ScaData.FK_SCAPeopleAward_SCACrowns", "SCAPeopleAward", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleOfficer_SCACrowns", "SCAPeopleOfficer")]
        public EntityCollection<PersonOfficer> SCAPeopleOfficers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonOfficer>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCACrowns", "SCAPeopleOfficer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonOfficer>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCACrowns", "SCAPeopleOfficer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="fileId">Initial value of the FileId property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="extension">Initial value of the Extension property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="contentType">Initial value of the ContentType property.</param>
        /// <param name="folderID">Initial value of the FolderID property.</param>
        /// <param name="uniqueId">Initial value of the UniqueId property.</param>
        /// <param name="versionGuid">Initial value of the VersionGuid property.</param>
        public static File CreateFile(global::System.Int32 fileId, global::System.String fileName, global::System.String extension, global::System.Int32 size, global::System.String contentType, global::System.Int32 folderID, global::System.Guid uniqueId, global::System.Guid versionGuid)
        {
            File file = new File();
            file.FileId = fileId;
            file.FileName = fileName;
            file.Extension = extension;
            file.Size = size;
            file.ContentType = contentType;
            file.FolderID = folderID;
            file.UniqueId = uniqueId;
            file.VersionGuid = versionGuid;
            return file;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                if (_FileId != value)
                {
                    OnFileIdChanging(value);
                    ReportPropertyChanging("FileId");
                    _FileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileId");
                    OnFileIdChanged();
                }
            }
        }
        private global::System.Int32 _FileId;
        partial void OnFileIdChanging(global::System.Int32 value);
        partial void OnFileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PortalId
        {
            get
            {
                return _PortalId;
            }
            set
            {
                OnPortalIdChanging(value);
                ReportPropertyChanging("PortalId");
                _PortalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortalId");
                OnPortalIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PortalId;
        partial void OnPortalIdChanging(Nullable<global::System.Int32> value);
        partial void OnPortalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Int32 _Size;
        partial void OnSizeChanging(global::System.Int32 value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Height;
        partial void OnHeightChanging(Nullable<global::System.Int32> value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.String _ContentType;
        partial void OnContentTypeChanging(global::System.String value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Folder
        {
            get
            {
                return _Folder;
            }
            set
            {
                OnFolderChanging(value);
                ReportPropertyChanging("Folder");
                _Folder = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Folder");
                OnFolderChanged();
            }
        }
        private global::System.String _Folder;
        partial void OnFolderChanging(global::System.String value);
        partial void OnFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FolderID
        {
            get
            {
                return _FolderID;
            }
            set
            {
                OnFolderIDChanging(value);
                ReportPropertyChanging("FolderID");
                _FolderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderID");
                OnFolderIDChanged();
            }
        }
        private global::System.Int32 _FolderID;
        partial void OnFolderIDChanging(global::System.Int32 value);
        partial void OnFolderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Content
        {
            get
            {
                return StructuralObject.GetValidValue(_Content);
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.Byte[] _Content;
        partial void OnContentChanging(global::System.Byte[] value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserID
        {
            get
            {
                return _CreatedByUserID;
            }
            set
            {
                OnCreatedByUserIDChanging(value);
                ReportPropertyChanging("CreatedByUserID");
                _CreatedByUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserID");
                OnCreatedByUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserID;
        partial void OnCreatedByUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOnDate
        {
            get
            {
                return _CreatedOnDate;
            }
            set
            {
                OnCreatedOnDateChanging(value);
                ReportPropertyChanging("CreatedOnDate");
                _CreatedOnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOnDate");
                OnCreatedOnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOnDate;
        partial void OnCreatedOnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastModifiedByUserID
        {
            get
            {
                return _LastModifiedByUserID;
            }
            set
            {
                OnLastModifiedByUserIDChanging(value);
                ReportPropertyChanging("LastModifiedByUserID");
                _LastModifiedByUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedByUserID");
                OnLastModifiedByUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LastModifiedByUserID;
        partial void OnLastModifiedByUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnLastModifiedByUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastModifiedOnDate
        {
            get
            {
                return _LastModifiedOnDate;
            }
            set
            {
                OnLastModifiedOnDateChanging(value);
                ReportPropertyChanging("LastModifiedOnDate");
                _LastModifiedOnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModifiedOnDate");
                OnLastModifiedOnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastModifiedOnDate;
        partial void OnLastModifiedOnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastModifiedOnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UniqueId
        {
            get
            {
                return _UniqueId;
            }
            set
            {
                OnUniqueIdChanging(value);
                ReportPropertyChanging("UniqueId");
                _UniqueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueId");
                OnUniqueIdChanged();
            }
        }
        private global::System.Guid _UniqueId;
        partial void OnUniqueIdChanging(global::System.Guid value);
        partial void OnUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid VersionGuid
        {
            get
            {
                return _VersionGuid;
            }
            set
            {
                OnVersionGuidChanging(value);
                ReportPropertyChanging("VersionGuid");
                _VersionGuid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionGuid");
                OnVersionGuidChanged();
            }
        }
        private global::System.Guid _VersionGuid;
        partial void OnVersionGuidChanging(global::System.Guid value);
        partial void OnVersionGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SHA1Hash
        {
            get
            {
                return _SHA1Hash;
            }
            set
            {
                OnSHA1HashChanging(value);
                ReportPropertyChanging("SHA1Hash");
                _SHA1Hash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SHA1Hash");
                OnSHA1HashChanged();
            }
        }
        private global::System.String _SHA1Hash;
        partial void OnSHA1HashChanging(global::System.String value);
        partial void OnSHA1HashChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="hidden">Initial value of the Hidden property.</param>
        /// <param name="branchStatusId">Initial value of the BranchStatusId property.</param>
        public static Group CreateGroup(global::System.Int32 groupId, global::System.String name, global::System.Boolean hidden, global::System.Int32 branchStatusId)
        {
            Group group = new Group();
            group.GroupId = groupId;
            group.Name = name;
            group.Hidden = hidden;
            group.BranchStatusId = branchStatusId;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                if (_GroupId != value)
                {
                    OnGroupIdChanging(value);
                    ReportPropertyChanging("GroupId");
                    _GroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupId");
                    OnGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _GroupId;
        partial void OnGroupIdChanging(global::System.Int32 value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Precedence
        {
            get
            {
                return _Precedence;
            }
            set
            {
                OnPrecedenceChanging(value);
                ReportPropertyChanging("Precedence");
                _Precedence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Precedence");
                OnPrecedenceChanged();
            }
        }
        private Nullable<global::System.Int32> _Precedence;
        partial void OnPrecedenceChanging(Nullable<global::System.Int32> value);
        partial void OnPrecedenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FoundingDate
        {
            get
            {
                return _FoundingDate;
            }
            set
            {
                OnFoundingDateChanging(value);
                ReportPropertyChanging("FoundingDate");
                _FoundingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FoundingDate");
                OnFoundingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FoundingDate;
        partial void OnFoundingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFoundingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupDesignationId
        {
            get
            {
                return _GroupDesignationId;
            }
            set
            {
                OnGroupDesignationIdChanging(value);
                ReportPropertyChanging("GroupDesignationId");
                _GroupDesignationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupDesignationId");
                OnGroupDesignationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupDesignationId;
        partial void OnGroupDesignationIdChanging(Nullable<global::System.Int32> value);
        partial void OnGroupDesignationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Hidden
        {
            get
            {
                return _Hidden;
            }
            set
            {
                OnHiddenChanging(value);
                ReportPropertyChanging("Hidden");
                _Hidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hidden");
                OnHiddenChanged();
            }
        }
        private global::System.Boolean _Hidden;
        partial void OnHiddenChanging(global::System.Boolean value);
        partial void OnHiddenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArmsUrl
        {
            get
            {
                return _ArmsUrl;
            }
            set
            {
                OnArmsUrlChanging(value);
                ReportPropertyChanging("ArmsUrl");
                _ArmsUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArmsUrl");
                OnArmsUrlChanged();
            }
        }
        private global::System.String _ArmsUrl;
        partial void OnArmsUrlChanging(global::System.String value);
        partial void OnArmsUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArmsBlazon
        {
            get
            {
                return _ArmsBlazon;
            }
            set
            {
                OnArmsBlazonChanging(value);
                ReportPropertyChanging("ArmsBlazon");
                _ArmsBlazon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArmsBlazon");
                OnArmsBlazonChanged();
            }
        }
        private global::System.String _ArmsBlazon;
        partial void OnArmsBlazonChanging(global::System.String value);
        partial void OnArmsBlazonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BranchStatusId
        {
            get
            {
                return _BranchStatusId;
            }
            set
            {
                OnBranchStatusIdChanging(value);
                ReportPropertyChanging("BranchStatusId");
                _BranchStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchStatusId");
                OnBranchStatusIdChanged();
            }
        }
        private global::System.Int32 _BranchStatusId;
        partial void OnBranchStatusIdChanging(global::System.Int32 value);
        partial void OnBranchStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SovereignMaleTitle
        {
            get
            {
                return _SovereignMaleTitle;
            }
            set
            {
                OnSovereignMaleTitleChanging(value);
                ReportPropertyChanging("SovereignMaleTitle");
                _SovereignMaleTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SovereignMaleTitle");
                OnSovereignMaleTitleChanged();
            }
        }
        private global::System.String _SovereignMaleTitle;
        partial void OnSovereignMaleTitleChanging(global::System.String value);
        partial void OnSovereignMaleTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SovereignFemaleTitle
        {
            get
            {
                return _SovereignFemaleTitle;
            }
            set
            {
                OnSovereignFemaleTitleChanging(value);
                ReportPropertyChanging("SovereignFemaleTitle");
                _SovereignFemaleTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SovereignFemaleTitle");
                OnSovereignFemaleTitleChanged();
            }
        }
        private global::System.String _SovereignFemaleTitle;
        partial void OnSovereignFemaleTitleChanging(global::System.String value);
        partial void OnSovereignFemaleTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConsortMaleTitle
        {
            get
            {
                return _ConsortMaleTitle;
            }
            set
            {
                OnConsortMaleTitleChanging(value);
                ReportPropertyChanging("ConsortMaleTitle");
                _ConsortMaleTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConsortMaleTitle");
                OnConsortMaleTitleChanged();
            }
        }
        private global::System.String _ConsortMaleTitle;
        partial void OnConsortMaleTitleChanging(global::System.String value);
        partial void OnConsortMaleTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConsortFemaleTitle
        {
            get
            {
                return _ConsortFemaleTitle;
            }
            set
            {
                OnConsortFemaleTitleChanging(value);
                ReportPropertyChanging("ConsortFemaleTitle");
                _ConsortFemaleTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConsortFemaleTitle");
                OnConsortFemaleTitleChanged();
            }
        }
        private global::System.String _ConsortFemaleTitle;
        partial void OnConsortFemaleTitleChanging(global::System.String value);
        partial void OnConsortFemaleTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentGroupId
        {
            get
            {
                return _ParentGroupId;
            }
            set
            {
                OnParentGroupIdChanging(value);
                ReportPropertyChanging("ParentGroupId");
                _ParentGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentGroupId");
                OnParentGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentGroupId;
        partial void OnParentGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SovereignArmsUrl
        {
            get
            {
                return _SovereignArmsUrl;
            }
            set
            {
                OnSovereignArmsUrlChanging(value);
                ReportPropertyChanging("SovereignArmsUrl");
                _SovereignArmsUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SovereignArmsUrl");
                OnSovereignArmsUrlChanged();
            }
        }
        private global::System.String _SovereignArmsUrl;
        partial void OnSovereignArmsUrlChanging(global::System.String value);
        partial void OnSovereignArmsUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SovereignBlazon
        {
            get
            {
                return _SovereignBlazon;
            }
            set
            {
                OnSovereignBlazonChanging(value);
                ReportPropertyChanging("SovereignBlazon");
                _SovereignBlazon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SovereignBlazon");
                OnSovereignBlazonChanged();
            }
        }
        private global::System.String _SovereignBlazon;
        partial void OnSovereignBlazonChanging(global::System.String value);
        partial void OnSovereignBlazonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConsortArmsUrl
        {
            get
            {
                return _ConsortArmsUrl;
            }
            set
            {
                OnConsortArmsUrlChanging(value);
                ReportPropertyChanging("ConsortArmsUrl");
                _ConsortArmsUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConsortArmsUrl");
                OnConsortArmsUrlChanged();
            }
        }
        private global::System.String _ConsortArmsUrl;
        partial void OnConsortArmsUrlChanging(global::System.String value);
        partial void OnConsortArmsUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebSiteUrl
        {
            get
            {
                return _WebSiteUrl;
            }
            set
            {
                OnWebSiteUrlChanging(value);
                ReportPropertyChanging("WebSiteUrl");
                _WebSiteUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebSiteUrl");
                OnWebSiteUrlChanged();
            }
        }
        private global::System.String _WebSiteUrl;
        partial void OnWebSiteUrlChanging(global::System.String value);
        partial void OnWebSiteUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalUrl
        {
            get
            {
                return _InternalUrl;
            }
            set
            {
                OnInternalUrlChanging(value);
                ReportPropertyChanging("InternalUrl");
                _InternalUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalUrl");
                OnInternalUrlChanged();
            }
        }
        private global::System.String _InternalUrl;
        partial void OnInternalUrlChanging(global::System.String value);
        partial void OnInternalUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConsortBlazon
        {
            get
            {
                return _ConsortBlazon;
            }
            set
            {
                OnConsortBlazonChanging(value);
                ReportPropertyChanging("ConsortBlazon");
                _ConsortBlazon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConsortBlazon");
                OnConsortBlazonChanged();
            }
        }
        private global::System.String _ConsortBlazon;
        partial void OnConsortBlazonChanging(global::System.String value);
        partial void OnConsortBlazonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReignType
        {
            get
            {
                return _ReignType;
            }
            set
            {
                OnReignTypeChanging(value);
                ReportPropertyChanging("ReignType");
                _ReignType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReignType");
                OnReignTypeChanged();
            }
        }
        private global::System.String _ReignType;
        partial void OnReignTypeChanging(global::System.String value);
        partial void OnReignTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegentMaleTitle
        {
            get
            {
                return _RegentMaleTitle;
            }
            set
            {
                OnRegentMaleTitleChanging(value);
                ReportPropertyChanging("RegentMaleTitle");
                _RegentMaleTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegentMaleTitle");
                OnRegentMaleTitleChanged();
            }
        }
        private global::System.String _RegentMaleTitle;
        partial void OnRegentMaleTitleChanging(global::System.String value);
        partial void OnRegentMaleTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegentFemaleTitle
        {
            get
            {
                return _RegentFemaleTitle;
            }
            set
            {
                OnRegentFemaleTitleChanging(value);
                ReportPropertyChanging("RegentFemaleTitle");
                _RegentFemaleTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegentFemaleTitle");
                OnRegentFemaleTitleChanged();
            }
        }
        private global::System.String _RegentFemaleTitle;
        partial void OnRegentFemaleTitleChanging(global::System.String value);
        partial void OnRegentFemaleTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegentType
        {
            get
            {
                return _RegentType;
            }
            set
            {
                OnRegentTypeChanging(value);
                ReportPropertyChanging("RegentType");
                _RegentType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegentType");
                OnRegentTypeChanged();
            }
        }
        private global::System.String _RegentType;
        partial void OnRegentTypeChanging(global::System.String value);
        partial void OnRegentTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAAwardGroups_SCAGroups", "SCAAwardGroups")]
        public EntityCollection<AwardGroup> AwardGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AwardGroup>("JeffMartin.ScaData.FK_SCAAwardGroups_SCAGroups", "SCAAwardGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AwardGroup>("JeffMartin.ScaData.FK_SCAAwardGroups_SCAGroups", "SCAAwardGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAAwards_SCAGroups", "SCAAwards")]
        public EntityCollection<Award> Awards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Award>("JeffMartin.ScaData.FK_SCAAwards_SCAGroups", "SCAAwards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Award>("JeffMartin.ScaData.FK_SCAAwards_SCAGroups", "SCAAwards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAGroups_SCABranchStatusId", "SCABranchStatus")]
        public BranchStatus BranchStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BranchStatus>("JeffMartin.ScaData.FK_SCAGroups_SCABranchStatusId", "SCABranchStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BranchStatus>("JeffMartin.ScaData.FK_SCAGroups_SCABranchStatusId", "SCABranchStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BranchStatus> BranchStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BranchStatus>("JeffMartin.ScaData.FK_SCAGroups_SCABranchStatusId", "SCABranchStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BranchStatus>("JeffMartin.ScaData.FK_SCAGroups_SCABranchStatusId", "SCABranchStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCACrowns_SCAGroups", "SCACrowns")]
        public EntityCollection<Crown> Crowns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Crown>("JeffMartin.ScaData.FK_SCACrowns_SCAGroups", "SCACrowns");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Crown>("JeffMartin.ScaData.FK_SCACrowns_SCAGroups", "SCACrowns", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAGroups_SCAGroupDesignation", "SCAGroupDesignation")]
        public GroupDesignation GroupDesignation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupDesignation>("JeffMartin.ScaData.FK_SCAGroups_SCAGroupDesignation", "SCAGroupDesignation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupDesignation>("JeffMartin.ScaData.FK_SCAGroups_SCAGroupDesignation", "SCAGroupDesignation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GroupDesignation> GroupDesignationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GroupDesignation>("JeffMartin.ScaData.FK_SCAGroups_SCAGroupDesignation", "SCAGroupDesignation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GroupDesignation>("JeffMartin.ScaData.FK_SCAGroups_SCAGroupDesignation", "SCAGroupDesignation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAGroups_SCAGroups", "SCAGroups1")]
        public EntityCollection<Group> SubGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("JeffMartin.ScaData.FK_SCAGroups_SCAGroups", "SCAGroups1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("JeffMartin.ScaData.FK_SCAGroups_SCAGroups", "SCAGroups1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAGroups_SCAGroups", "SCAGroups")]
        public Group ParentGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAGroups_SCAGroups", "SCAGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAGroups_SCAGroups", "SCAGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> ParentGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAGroups_SCAGroups", "SCAGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("JeffMartin.ScaData.FK_SCAGroups_SCAGroups", "SCAGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAOfficerPosition_SCAGroups", "SCAOfficerPosition")]
        public EntityCollection<OfficerPosition> OfficerPositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OfficerPosition>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAGroups", "SCAOfficerPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OfficerPosition>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAGroups", "SCAOfficerPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeople_SCAGroups", "SCAPeople")]
        public EntityCollection<Person> Residents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("JeffMartin.ScaData.FK_SCAPeople_SCAGroups", "SCAPeople");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("JeffMartin.ScaData.FK_SCAPeople_SCAGroups", "SCAPeople", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="GroupDesignation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupDesignation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupDesignation object.
        /// </summary>
        /// <param name="groupDesignationId">Initial value of the GroupDesignationId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="ceremonialHead">Initial value of the CeremonialHead property.</param>
        public static GroupDesignation CreateGroupDesignation(global::System.Int32 groupDesignationId, global::System.String name, global::System.Boolean ceremonialHead)
        {
            GroupDesignation groupDesignation = new GroupDesignation();
            groupDesignation.GroupDesignationId = groupDesignationId;
            groupDesignation.Name = name;
            groupDesignation.CeremonialHead = ceremonialHead;
            return groupDesignation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupDesignationId
        {
            get
            {
                return _GroupDesignationId;
            }
            set
            {
                if (_GroupDesignationId != value)
                {
                    OnGroupDesignationIdChanging(value);
                    ReportPropertyChanging("GroupDesignationId");
                    _GroupDesignationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupDesignationId");
                    OnGroupDesignationIdChanged();
                }
            }
        }
        private global::System.Int32 _GroupDesignationId;
        partial void OnGroupDesignationIdChanging(global::System.Int32 value);
        partial void OnGroupDesignationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CeremonialHead
        {
            get
            {
                return _CeremonialHead;
            }
            set
            {
                OnCeremonialHeadChanging(value);
                ReportPropertyChanging("CeremonialHead");
                _CeremonialHead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CeremonialHead");
                OnCeremonialHeadChanged();
            }
        }
        private global::System.Boolean _CeremonialHead;
        partial void OnCeremonialHeadChanging(global::System.Boolean value);
        partial void OnCeremonialHeadChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAGroups_SCAGroupDesignation", "SCAGroups")]
        public EntityCollection<Group> SCAGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("JeffMartin.ScaData.FK_SCAGroups_SCAGroupDesignation", "SCAGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("JeffMartin.ScaData.FK_SCAGroups_SCAGroupDesignation", "SCAGroups", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="OfficerPosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OfficerPosition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OfficerPosition object.
        /// </summary>
        /// <param name="officerPositionId">Initial value of the OfficerPositionId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="listOrder">Initial value of the ListOrder property.</param>
        public static OfficerPosition CreateOfficerPosition(global::System.Int32 officerPositionId, global::System.String title, global::System.Int32 listOrder)
        {
            OfficerPosition officerPosition = new OfficerPosition();
            officerPosition.OfficerPositionId = officerPositionId;
            officerPosition.Title = title;
            officerPosition.ListOrder = listOrder;
            return officerPosition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OfficerPositionId
        {
            get
            {
                return _OfficerPositionId;
            }
            set
            {
                if (_OfficerPositionId != value)
                {
                    OnOfficerPositionIdChanging(value);
                    ReportPropertyChanging("OfficerPositionId");
                    _OfficerPositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OfficerPositionId");
                    OnOfficerPositionIdChanged();
                }
            }
        }
        private global::System.Int32 _OfficerPositionId;
        partial void OnOfficerPositionIdChanging(global::System.Int32 value);
        partial void OnOfficerPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupId;
        partial void OnGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListOrder
        {
            get
            {
                return _ListOrder;
            }
            set
            {
                OnListOrderChanging(value);
                ReportPropertyChanging("ListOrder");
                _ListOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListOrder");
                OnListOrderChanged();
            }
        }
        private global::System.Int32 _ListOrder;
        partial void OnListOrderChanging(global::System.Int32 value);
        partial void OnListOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficeEmail
        {
            get
            {
                return _OfficeEmail;
            }
            set
            {
                OnOfficeEmailChanging(value);
                ReportPropertyChanging("OfficeEmail");
                _OfficeEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OfficeEmail");
                OnOfficeEmailChanged();
            }
        }
        private global::System.String _OfficeEmail;
        partial void OnOfficeEmailChanging(global::System.String value);
        partial void OnOfficeEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OfficerPositionTypeId
        {
            get
            {
                return _OfficerPositionTypeId;
            }
            set
            {
                OnOfficerPositionTypeIdChanging(value);
                ReportPropertyChanging("OfficerPositionTypeId");
                _OfficerPositionTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OfficerPositionTypeId");
                OnOfficerPositionTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OfficerPositionTypeId;
        partial void OnOfficerPositionTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnOfficerPositionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                OnFileIdChanging(value);
                ReportPropertyChanging("FileId");
                _FileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileId");
                OnFileIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FileId;
        partial void OnFileIdChanging(Nullable<global::System.Int32> value);
        partial void OnFileIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAOfficerPosition_SCAGroups", "SCAGroups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAGroups", "SCAGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAGroups", "SCAGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAGroups", "SCAGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAGroups", "SCAGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAOfficerPosition_SCAOfficerPositionType", "SCAOfficerPositionType")]
        public OfficerPositionType OfficePositionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerPositionType>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAOfficerPositionType", "SCAOfficerPositionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerPositionType>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAOfficerPositionType", "SCAOfficerPositionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OfficerPositionType> OfficePositionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerPositionType>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAOfficerPositionType", "SCAOfficerPositionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OfficerPositionType>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAOfficerPositionType", "SCAOfficerPositionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleOfficer_SCAOfficerPosition", "SCAPeopleOfficer")]
        public EntityCollection<PersonOfficer> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonOfficer>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAOfficerPosition", "SCAPeopleOfficer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonOfficer>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAOfficerPosition", "SCAPeopleOfficer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FileOfficerPosition", "File")]
        public File Badge
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("JeffMartin.ScaData.FileOfficerPosition", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("JeffMartin.ScaData.FileOfficerPosition", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> BadgeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("JeffMartin.ScaData.FileOfficerPosition", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("JeffMartin.ScaData.FileOfficerPosition", "File", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="OfficerPositionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OfficerPositionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OfficerPositionType object.
        /// </summary>
        /// <param name="officerPositionTypeId">Initial value of the OfficerPositionTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="intTypeFlags">Initial value of the intTypeFlags property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static OfficerPositionType CreateOfficerPositionType(global::System.Int32 officerPositionTypeId, global::System.String name, global::System.Int32 intTypeFlags, global::System.Int32 sortOrder)
        {
            OfficerPositionType officerPositionType = new OfficerPositionType();
            officerPositionType.OfficerPositionTypeId = officerPositionTypeId;
            officerPositionType.Name = name;
            officerPositionType.intTypeFlags = intTypeFlags;
            officerPositionType.SortOrder = sortOrder;
            return officerPositionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OfficerPositionTypeId
        {
            get
            {
                return _OfficerPositionTypeId;
            }
            set
            {
                if (_OfficerPositionTypeId != value)
                {
                    OnOfficerPositionTypeIdChanging(value);
                    ReportPropertyChanging("OfficerPositionTypeId");
                    _OfficerPositionTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OfficerPositionTypeId");
                    OnOfficerPositionTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _OfficerPositionTypeId;
        partial void OnOfficerPositionTypeIdChanging(global::System.Int32 value);
        partial void OnOfficerPositionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 intTypeFlags
        {
            get
            {
                return _intTypeFlags;
            }
            set
            {
                OnintTypeFlagsChanging(value);
                ReportPropertyChanging("intTypeFlags");
                _intTypeFlags = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("intTypeFlags");
                OnintTypeFlagsChanged();
            }
        }
        private global::System.Int32 _intTypeFlags;
        partial void OnintTypeFlagsChanging(global::System.Int32 value);
        partial void OnintTypeFlagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAOfficerPosition_SCAOfficerPositionType", "SCAOfficerPosition")]
        public EntityCollection<OfficerPosition> OfficePostionsOfThisType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OfficerPosition>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAOfficerPositionType", "SCAOfficerPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OfficerPosition>("JeffMartin.ScaData.FK_SCAOfficerPosition_SCAOfficerPositionType", "SCAOfficerPosition", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="scaName">Initial value of the ScaName property.</param>
        /// <param name="showPicPermission">Initial value of the ShowPicPermission property.</param>
        /// <param name="showEmailPermission">Initial value of the ShowEmailPermission property.</param>
        /// <param name="deceased">Initial value of the Deceased property.</param>
        public static Person CreatePerson(global::System.Int32 personId, global::System.String scaName, global::System.Boolean showPicPermission, global::System.Boolean showEmailPermission, global::System.Boolean deceased)
        {
            Person person = new Person();
            person.PersonId = personId;
            person.ScaName = scaName;
            person.ShowPicPermission = showPicPermission;
            person.ShowEmailPermission = showEmailPermission;
            person.Deceased = deceased;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScaName
        {
            get
            {
                return _ScaName;
            }
            set
            {
                OnScaNameChanging(value);
                ReportPropertyChanging("ScaName");
                _ScaName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScaName");
                OnScaNameChanged();
            }
        }
        private global::System.String _ScaName;
        partial void OnScaNameChanging(global::System.String value);
        partial void OnScaNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MundaneName
        {
            get
            {
                return _MundaneName;
            }
            set
            {
                OnMundaneNameChanging(value);
                ReportPropertyChanging("MundaneName");
                _MundaneName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MundaneName");
                OnMundaneNameChanged();
            }
        }
        private global::System.String _MundaneName;
        partial void OnMundaneNameChanging(global::System.String value);
        partial void OnMundaneNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone1
        {
            get
            {
                return _Phone1;
            }
            set
            {
                OnPhone1Changing(value);
                ReportPropertyChanging("Phone1");
                _Phone1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone1");
                OnPhone1Changed();
            }
        }
        private global::System.String _Phone1;
        partial void OnPhone1Changing(global::System.String value);
        partial void OnPhone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone2
        {
            get
            {
                return _Phone2;
            }
            set
            {
                OnPhone2Changing(value);
                ReportPropertyChanging("Phone2");
                _Phone2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone2");
                OnPhone2Changed();
            }
        }
        private global::System.String _Phone2;
        partial void OnPhone2Changing(global::System.String value);
        partial void OnPhone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoURL
        {
            get
            {
                return _PhotoURL;
            }
            set
            {
                OnPhotoURLChanging(value);
                ReportPropertyChanging("PhotoURL");
                _PhotoURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoURL");
                OnPhotoURLChanged();
            }
        }
        private global::System.String _PhotoURL;
        partial void OnPhotoURLChanging(global::System.String value);
        partial void OnPhotoURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArmsURL
        {
            get
            {
                return _ArmsURL;
            }
            set
            {
                OnArmsURLChanging(value);
                ReportPropertyChanging("ArmsURL");
                _ArmsURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArmsURL");
                OnArmsURLChanged();
            }
        }
        private global::System.String _ArmsURL;
        partial void OnArmsURLChanging(global::System.String value);
        partial void OnArmsURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArmsBlazon
        {
            get
            {
                return _ArmsBlazon;
            }
            set
            {
                OnArmsBlazonChanging(value);
                ReportPropertyChanging("ArmsBlazon");
                _ArmsBlazon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ArmsBlazon");
                OnArmsBlazonChanged();
            }
        }
        private global::System.String _ArmsBlazon;
        partial void OnArmsBlazonChanging(global::System.String value);
        partial void OnArmsBlazonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowPicPermission
        {
            get
            {
                return _ShowPicPermission;
            }
            set
            {
                OnShowPicPermissionChanging(value);
                ReportPropertyChanging("ShowPicPermission");
                _ShowPicPermission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowPicPermission");
                OnShowPicPermissionChanged();
            }
        }
        private global::System.Boolean _ShowPicPermission;
        partial void OnShowPicPermissionChanging(global::System.Boolean value);
        partial void OnShowPicPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowEmailPermission
        {
            get
            {
                return _ShowEmailPermission;
            }
            set
            {
                OnShowEmailPermissionChanging(value);
                ReportPropertyChanging("ShowEmailPermission");
                _ShowEmailPermission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowEmailPermission");
                OnShowEmailPermissionChanged();
            }
        }
        private global::System.Boolean _ShowEmailPermission;
        partial void OnShowEmailPermissionChanging(global::System.Boolean value);
        partial void OnShowEmailPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdminNotes
        {
            get
            {
                return _AdminNotes;
            }
            set
            {
                OnAdminNotesChanging(value);
                ReportPropertyChanging("AdminNotes");
                _AdminNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdminNotes");
                OnAdminNotesChanged();
            }
        }
        private global::System.String _AdminNotes;
        partial void OnAdminNotesChanging(global::System.String value);
        partial void OnAdminNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficerNotes
        {
            get
            {
                return _OfficerNotes;
            }
            set
            {
                OnOfficerNotesChanging(value);
                ReportPropertyChanging("OfficerNotes");
                _OfficerNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OfficerNotes");
                OnOfficerNotesChanged();
            }
        }
        private global::System.String _OfficerNotes;
        partial void OnOfficerNotesChanging(global::System.String value);
        partial void OnOfficerNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OPNum
        {
            get
            {
                return _OPNum;
            }
            set
            {
                OnOPNumChanging(value);
                ReportPropertyChanging("OPNum");
                _OPNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OPNum");
                OnOPNumChanged();
            }
        }
        private Nullable<global::System.Int32> _OPNum;
        partial void OnOPNumChanging(Nullable<global::System.Int32> value);
        partial void OnOPNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitlePrefix
        {
            get
            {
                return _TitlePrefix;
            }
            set
            {
                OnTitlePrefixChanging(value);
                ReportPropertyChanging("TitlePrefix");
                _TitlePrefix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TitlePrefix");
                OnTitlePrefixChanged();
            }
        }
        private global::System.String _TitlePrefix;
        partial void OnTitlePrefixChanging(global::System.String value);
        partial void OnTitlePrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HonorsSuffix
        {
            get
            {
                return _HonorsSuffix;
            }
            set
            {
                OnHonorsSuffixChanging(value);
                ReportPropertyChanging("HonorsSuffix");
                _HonorsSuffix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HonorsSuffix");
                OnHonorsSuffixChanged();
            }
        }
        private global::System.String _HonorsSuffix;
        partial void OnHonorsSuffixChanging(global::System.String value);
        partial void OnHonorsSuffixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deceased
        {
            get
            {
                return _Deceased;
            }
            set
            {
                OnDeceasedChanging(value);
                ReportPropertyChanging("Deceased");
                _Deceased = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deceased");
                OnDeceasedChanged();
            }
        }
        private global::System.Boolean _Deceased;
        partial void OnDeceasedChanging(global::System.Boolean value);
        partial void OnDeceasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeceasedWhen
        {
            get
            {
                return _DeceasedWhen;
            }
            set
            {
                OnDeceasedWhenChanging(value);
                ReportPropertyChanging("DeceasedWhen");
                _DeceasedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeceasedWhen");
                OnDeceasedWhenChanged();
            }
        }
        private Nullable<global::System.Int32> _DeceasedWhen;
        partial void OnDeceasedWhenChanging(Nullable<global::System.Int32> value);
        partial void OnDeceasedWhenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BranchResidenceId
        {
            get
            {
                return _BranchResidenceId;
            }
            set
            {
                OnBranchResidenceIdChanging(value);
                ReportPropertyChanging("BranchResidenceId");
                _BranchResidenceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchResidenceId");
                OnBranchResidenceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BranchResidenceId;
        partial void OnBranchResidenceIdChanging(Nullable<global::System.Int32> value);
        partial void OnBranchResidenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HighestAwardName
        {
            get
            {
                return _HighestAwardName;
            }
            set
            {
                OnHighestAwardNameChanging(value);
                ReportPropertyChanging("HighestAwardName");
                _HighestAwardName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HighestAwardName");
                OnHighestAwardNameChanged();
            }
        }
        private global::System.String _HighestAwardName;
        partial void OnHighestAwardNameChanging(global::System.String value);
        partial void OnHighestAwardNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HighestAwardPrecedence
        {
            get
            {
                return _HighestAwardPrecedence;
            }
            set
            {
                OnHighestAwardPrecedenceChanging(value);
                ReportPropertyChanging("HighestAwardPrecedence");
                _HighestAwardPrecedence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighestAwardPrecedence");
                OnHighestAwardPrecedenceChanged();
            }
        }
        private Nullable<global::System.Int32> _HighestAwardPrecedence;
        partial void OnHighestAwardPrecedenceChanging(Nullable<global::System.Int32> value);
        partial void OnHighestAwardPrecedenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HighestAwardDate
        {
            get
            {
                return _HighestAwardDate;
            }
            set
            {
                OnHighestAwardDateChanging(value);
                ReportPropertyChanging("HighestAwardDate");
                _HighestAwardDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighestAwardDate");
                OnHighestAwardDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HighestAwardDate;
        partial void OnHighestAwardDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHighestAwardDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HighestAwardId
        {
            get
            {
                return _HighestAwardId;
            }
            set
            {
                OnHighestAwardIdChanging(value);
                ReportPropertyChanging("HighestAwardId");
                _HighestAwardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighestAwardId");
                OnHighestAwardIdChanged();
            }
        }
        private Nullable<global::System.DateTime> _HighestAwardId;
        partial void OnHighestAwardIdChanging(Nullable<global::System.DateTime> value);
        partial void OnHighestAwardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CrownId
        {
            get
            {
                return _CrownId;
            }
            set
            {
                OnCrownIdChanging(value);
                ReportPropertyChanging("CrownId");
                _CrownId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CrownId");
                OnCrownIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CrownId;
        partial void OnCrownIdChanging(Nullable<global::System.Int32> value);
        partial void OnCrownIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAAlias_SCAPeople", "SCAAlias")]
        public EntityCollection<Alias> SCAAlias
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Alias>("JeffMartin.ScaData.FK_SCAAlias_SCAPeople", "SCAAlias");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Alias>("JeffMartin.ScaData.FK_SCAAlias_SCAPeople", "SCAAlias", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeople_SCAGroups", "SCAGroups")]
        public Group SCAGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAPeople_SCAGroups", "SCAGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAPeople_SCAGroups", "SCAGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> SCAGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("JeffMartin.ScaData.FK_SCAPeople_SCAGroups", "SCAGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("JeffMartin.ScaData.FK_SCAPeople_SCAGroups", "SCAGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCAPeople", "SCAPeopleAward")]
        public EntityCollection<PersonAward> SCAPeopleAwards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonAward>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAPeople", "SCAPeopleAward");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonAward>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAPeople", "SCAPeopleAward", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleOfficer_SCAPeople", "SCAPeopleOfficer")]
        public EntityCollection<PersonOfficer> SCAPeopleOfficers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonOfficer>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAPeople", "SCAPeopleOfficer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonOfficer>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAPeople", "SCAPeopleOfficer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="PersonAward")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonAward : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonAward object.
        /// </summary>
        /// <param name="peopleAwardId">Initial value of the PeopleAwardId property.</param>
        /// <param name="awardId">Initial value of the AwardId property.</param>
        /// <param name="peopleId">Initial value of the PeopleId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="retired">Initial value of the Retired property.</param>
        public static PersonAward CreatePersonAward(global::System.Int32 peopleAwardId, global::System.Int32 awardId, global::System.Int32 peopleId, global::System.DateTime date, global::System.Boolean retired)
        {
            PersonAward personAward = new PersonAward();
            personAward.PeopleAwardId = peopleAwardId;
            personAward.AwardId = awardId;
            personAward.PeopleId = peopleId;
            personAward.Date = date;
            personAward.Retired = retired;
            return personAward;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeopleAwardId
        {
            get
            {
                return _PeopleAwardId;
            }
            set
            {
                if (_PeopleAwardId != value)
                {
                    OnPeopleAwardIdChanging(value);
                    ReportPropertyChanging("PeopleAwardId");
                    _PeopleAwardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeopleAwardId");
                    OnPeopleAwardIdChanged();
                }
            }
        }
        private global::System.Int32 _PeopleAwardId;
        partial void OnPeopleAwardIdChanging(global::System.Int32 value);
        partial void OnPeopleAwardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AwardId
        {
            get
            {
                return _AwardId;
            }
            set
            {
                OnAwardIdChanging(value);
                ReportPropertyChanging("AwardId");
                _AwardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AwardId");
                OnAwardIdChanged();
            }
        }
        private global::System.Int32 _AwardId;
        partial void OnAwardIdChanging(global::System.Int32 value);
        partial void OnAwardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeopleId
        {
            get
            {
                return _PeopleId;
            }
            set
            {
                OnPeopleIdChanging(value);
                ReportPropertyChanging("PeopleId");
                _PeopleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeopleId");
                OnPeopleIdChanged();
            }
        }
        private global::System.Int32 _PeopleId;
        partial void OnPeopleIdChanging(global::System.Int32 value);
        partial void OnPeopleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CrownId
        {
            get
            {
                return _CrownId;
            }
            set
            {
                OnCrownIdChanging(value);
                ReportPropertyChanging("CrownId");
                _CrownId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CrownId");
                OnCrownIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CrownId;
        partial void OnCrownIdChanging(Nullable<global::System.Int32> value);
        partial void OnCrownIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AliasId
        {
            get
            {
                return _AliasId;
            }
            set
            {
                OnAliasIdChanging(value);
                ReportPropertyChanging("AliasId");
                _AliasId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AliasId");
                OnAliasIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AliasId;
        partial void OnAliasIdChanging(Nullable<global::System.Int32> value);
        partial void OnAliasIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Retired
        {
            get
            {
                return _Retired;
            }
            set
            {
                OnRetiredChanging(value);
                ReportPropertyChanging("Retired");
                _Retired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Retired");
                OnRetiredChanged();
            }
        }
        private global::System.Boolean _Retired;
        partial void OnRetiredChanging(global::System.Boolean value);
        partial void OnRetiredChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCAAlias", "SCAAlias")]
        public Alias SCAAlia
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alias>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAlias", "SCAAlias").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alias>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAlias", "SCAAlias").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Alias> SCAAliaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Alias>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAlias", "SCAAlias");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Alias>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAlias", "SCAAlias", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCAAwards", "SCAAwards")]
        public Award SCAAward
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Award>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAwards", "SCAAwards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Award>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAwards", "SCAAwards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Award> SCAAwardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Award>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAwards", "SCAAwards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Award>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAAwards", "SCAAwards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCACrowns", "SCACrowns")]
        public Crown SCACrown
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crown>("JeffMartin.ScaData.FK_SCAPeopleAward_SCACrowns", "SCACrowns").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crown>("JeffMartin.ScaData.FK_SCAPeopleAward_SCACrowns", "SCACrowns").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Crown> SCACrownReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crown>("JeffMartin.ScaData.FK_SCAPeopleAward_SCACrowns", "SCACrowns");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Crown>("JeffMartin.ScaData.FK_SCAPeopleAward_SCACrowns", "SCACrowns", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleAward_SCAPeople", "SCAPeople")]
        public Person SCAPeople
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAPeople", "SCAPeople").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAPeople", "SCAPeople").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> SCAPeopleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAPeople", "SCAPeople");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("JeffMartin.ScaData.FK_SCAPeopleAward_SCAPeople", "SCAPeople", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JeffMartin.ScaData", Name="PersonOfficer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonOfficer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonOfficer object.
        /// </summary>
        /// <param name="peopleOfficerId">Initial value of the PeopleOfficerId property.</param>
        /// <param name="peopleId">Initial value of the PeopleId property.</param>
        /// <param name="officerPositionId">Initial value of the OfficerPositionId property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="currentlyHeld">Initial value of the CurrentlyHeld property.</param>
        /// <param name="acting">Initial value of the Acting property.</param>
        /// <param name="verified">Initial value of the Verified property.</param>
        /// <param name="emailToUse">Initial value of the EmailToUse property.</param>
        public static PersonOfficer CreatePersonOfficer(global::System.Int32 peopleOfficerId, global::System.Int32 peopleId, global::System.Int32 officerPositionId, global::System.DateTime startDate, global::System.Boolean currentlyHeld, global::System.Boolean acting, global::System.Boolean verified, global::System.String emailToUse)
        {
            PersonOfficer personOfficer = new PersonOfficer();
            personOfficer.PeopleOfficerId = peopleOfficerId;
            personOfficer.PeopleId = peopleId;
            personOfficer.OfficerPositionId = officerPositionId;
            personOfficer.StartDate = startDate;
            personOfficer.CurrentlyHeld = currentlyHeld;
            personOfficer.Acting = acting;
            personOfficer.Verified = verified;
            personOfficer.EmailToUse = emailToUse;
            return personOfficer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeopleOfficerId
        {
            get
            {
                return _PeopleOfficerId;
            }
            set
            {
                if (_PeopleOfficerId != value)
                {
                    OnPeopleOfficerIdChanging(value);
                    ReportPropertyChanging("PeopleOfficerId");
                    _PeopleOfficerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeopleOfficerId");
                    OnPeopleOfficerIdChanged();
                }
            }
        }
        private global::System.Int32 _PeopleOfficerId;
        partial void OnPeopleOfficerIdChanging(global::System.Int32 value);
        partial void OnPeopleOfficerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeopleId
        {
            get
            {
                return _PeopleId;
            }
            set
            {
                OnPeopleIdChanging(value);
                ReportPropertyChanging("PeopleId");
                _PeopleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeopleId");
                OnPeopleIdChanged();
            }
        }
        private global::System.Int32 _PeopleId;
        partial void OnPeopleIdChanging(global::System.Int32 value);
        partial void OnPeopleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OfficerPositionId
        {
            get
            {
                return _OfficerPositionId;
            }
            set
            {
                OnOfficerPositionIdChanging(value);
                ReportPropertyChanging("OfficerPositionId");
                _OfficerPositionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OfficerPositionId");
                OnOfficerPositionIdChanged();
            }
        }
        private global::System.Int32 _OfficerPositionId;
        partial void OnOfficerPositionIdChanging(global::System.Int32 value);
        partial void OnOfficerPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CurrentlyHeld
        {
            get
            {
                return _CurrentlyHeld;
            }
            set
            {
                OnCurrentlyHeldChanging(value);
                ReportPropertyChanging("CurrentlyHeld");
                _CurrentlyHeld = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentlyHeld");
                OnCurrentlyHeldChanged();
            }
        }
        private global::System.Boolean _CurrentlyHeld;
        partial void OnCurrentlyHeldChanging(global::System.Boolean value);
        partial void OnCurrentlyHeldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Acting
        {
            get
            {
                return _Acting;
            }
            set
            {
                OnActingChanging(value);
                ReportPropertyChanging("Acting");
                _Acting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Acting");
                OnActingChanged();
            }
        }
        private global::System.Boolean _Acting;
        partial void OnActingChanging(global::System.Boolean value);
        partial void OnActingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Verified
        {
            get
            {
                return _Verified;
            }
            set
            {
                OnVerifiedChanging(value);
                ReportPropertyChanging("Verified");
                _Verified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Verified");
                OnVerifiedChanged();
            }
        }
        private global::System.Boolean _Verified;
        partial void OnVerifiedChanging(global::System.Boolean value);
        partial void OnVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PositionSubTitle
        {
            get
            {
                return _PositionSubTitle;
            }
            set
            {
                OnPositionSubTitleChanging(value);
                ReportPropertyChanging("PositionSubTitle");
                _PositionSubTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PositionSubTitle");
                OnPositionSubTitleChanged();
            }
        }
        private global::System.String _PositionSubTitle;
        partial void OnPositionSubTitleChanging(global::System.String value);
        partial void OnPositionSubTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PositionNotes
        {
            get
            {
                return _PositionNotes;
            }
            set
            {
                OnPositionNotesChanging(value);
                ReportPropertyChanging("PositionNotes");
                _PositionNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PositionNotes");
                OnPositionNotesChanged();
            }
        }
        private global::System.String _PositionNotes;
        partial void OnPositionNotesChanging(global::System.String value);
        partial void OnPositionNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailToUse
        {
            get
            {
                return _EmailToUse;
            }
            set
            {
                OnEmailToUseChanging(value);
                ReportPropertyChanging("EmailToUse");
                _EmailToUse = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailToUse");
                OnEmailToUseChanged();
            }
        }
        private global::System.String _EmailToUse;
        partial void OnEmailToUseChanging(global::System.String value);
        partial void OnEmailToUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailOverride
        {
            get
            {
                return _EmailOverride;
            }
            set
            {
                OnEmailOverrideChanging(value);
                ReportPropertyChanging("EmailOverride");
                _EmailOverride = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailOverride");
                OnEmailOverrideChanged();
            }
        }
        private global::System.String _EmailOverride;
        partial void OnEmailOverrideChanging(global::System.String value);
        partial void OnEmailOverrideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VerifiedNotes
        {
            get
            {
                return _VerifiedNotes;
            }
            set
            {
                OnVerifiedNotesChanging(value);
                ReportPropertyChanging("VerifiedNotes");
                _VerifiedNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VerifiedNotes");
                OnVerifiedNotesChanged();
            }
        }
        private global::System.String _VerifiedNotes;
        partial void OnVerifiedNotesChanging(global::System.String value);
        partial void OnVerifiedNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LinkedCrownId
        {
            get
            {
                return _LinkedCrownId;
            }
            set
            {
                OnLinkedCrownIdChanging(value);
                ReportPropertyChanging("LinkedCrownId");
                _LinkedCrownId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinkedCrownId");
                OnLinkedCrownIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LinkedCrownId;
        partial void OnLinkedCrownIdChanging(Nullable<global::System.Int32> value);
        partial void OnLinkedCrownIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleOfficer_SCACrowns", "SCACrowns")]
        public Crown SCACrown
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crown>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCACrowns", "SCACrowns").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crown>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCACrowns", "SCACrowns").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Crown> SCACrownReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Crown>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCACrowns", "SCACrowns");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Crown>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCACrowns", "SCACrowns", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleOfficer_SCAOfficerPosition", "SCAOfficerPosition")]
        public OfficerPosition SCAOfficerPosition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerPosition>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAOfficerPosition", "SCAOfficerPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerPosition>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAOfficerPosition", "SCAOfficerPosition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OfficerPosition> SCAOfficerPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OfficerPosition>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAOfficerPosition", "SCAOfficerPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OfficerPosition>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAOfficerPosition", "SCAOfficerPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JeffMartin.ScaData", "FK_SCAPeopleOfficer_SCAPeople", "SCAPeople")]
        public Person SCAPeople
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAPeople", "SCAPeople").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAPeople", "SCAPeople").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> SCAPeopleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAPeople", "SCAPeople");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("JeffMartin.ScaData.FK_SCAPeopleOfficer_SCAPeople", "SCAPeople", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
